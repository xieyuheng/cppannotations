The ti(uniform_int_distribution<IntType = int>) can be used to select integral
values randomly from a range of uniformly distributed integral values.

It has two parameters, tt(a) and tt(b), specifying, respectively, the lowest
value that can be returned and the highest value that can be returned.

Defined types:
        verb(
    typedef IntType result_type;

    struct param_type
    {
        explicit param_type(IntType a = 0, IntType b = max(IntType));

        IntType a() const;
        IntType b() const;
    };
            )

Constructors and members:
    itemization(
    itt(uniform_int_distribution<>(IntType a = 0, IntType b = max(IntType)))
        constructs a uniform_int distribution for the specified range of
        values.
    itt(uniform_int_distribution<>(param_type const &param))
        constructs a uniform_int distribution according to the values stored in
        the tt(param) struct.
    itt(IntType a() const)nl()
        returns the distribution's tt(a) parameter;
    itt(IntType b() const)nl()
        returns the distribution's tt(b) parameter;
    itt(result_type min() const)nl()
        returns the distribution's tt(a) parameter;
    itt(result_type max() const)nl()
        returns the distribution's tt(b) parameter;
    )
