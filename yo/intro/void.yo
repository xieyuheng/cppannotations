In bf(C), a function prototype with an i(empty parameter list), such as
        verb(
    void func();
        )
 means that the argument list of the declared function is not prototyped: for
functions using this prototype the compiler does not warn against calling
tt(func) with any set of arguments. In bf(C) the keyword ti(void) is used when
it is the explicit intent to declare a function with no arguments at all, as
in:
        verb(
    void func(void);
        )
    As bf(C++) enforces strict type checking, in bf(C++) an empty parameter
list indicates the em(total absence) of parameters. The keyword tt(void) is
thus omitted.
