The following tables contain all format specifiers that can be used in the
format string of the tt(std::put_time) function.

Specifiers start with tt(%). To display a percent character write it twice:
tt(%%). In addition to the standard escape sequences, tt(%n) can be used
instead of tt(\n), and tt(%t) can be used instead of tt(\t). 

center(
    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Year specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(Y)(year as a 4 digit decimal number)(tm_year)
rowthree(EY)(year in an alternative representation)(tm_year)
rowthree(y)(last 2 digits of year as a decimal number
            (range [00,99]))(tm_year)
rowthree(Oy)(last 2 digits of year using an alternative numeric
            system)(tm_year)
rowthree(Ey)(year as offset from locale's alternative calendar
            period %EC (locale-dependent))(tm_year)
rowthree(C)(first 2 digits of year as a decimal number
            (range [00,99]))(tm_year)
rowthree(EC)(name of the base year (period) in the locale's
            alternative representation)(tm_year)
rowthree(G)(ISO 8601 week-based year, i.e. the year that contains
            the specified week)(tm_year, tm_wday, tm_yday)
rowthree(g)(last 2 digits of ISO 8601 week-based year
            (range [00,99]))(tm_year, tm_wday, tm_yday)
rowline()    
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Month specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(b)(abbreviated month name, e.g. Oct)(tm_mon)
rowthree(h)(synonym of b)(tm_mon)
rowthree(B)(full month name, e.g. October)(tm_mon)
rowthree(m)(month as a decimal number (range [01,12]))(tm_mon)
rowthree(Om)(month using an alternative numeric system)(tm_mon)
rowline()
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Week specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(U)(week of the year as a decimal number (Sunday is the first day of
            the week) (range [00,53]))(tm_year, tm_wday, tm_yday)
rowthree(OU)(week of the year, as by %U, using an alternative numeric
            system)(tm_year, tm_wday, tm_yday)
rowthree(W)(week of the year as a decimal number (Monday is the first day of
            the week) (range [00,53]))(tm_year, tm_wday, tm_yday)
rowthree(OW)(week of the year, as by %W, using an alternative numeric
            system)(tm_year, tm_wday, tm_yday)
rowthree(V)(ISO 8601 week of the year (range [01,53]))(tm_year, tm_wday,
            tm_yday)
rowthree(OV)(week of the year, as by %V, using an alternative numeric
            system)(tm_year, tm_wday, tm_yday)
rowline()
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Day of the year/month specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(j)(day of the year as a decimal number (range [001,366]))(tm_yday)
rowthree(d)(day of the month as a decimal number (range [01,31]))(tm_mday)
rowthree(Od)(zero-based day of the month using an alternative numeric
            system)(tm_mday)
rowthree(e)(day of the month as a decimal number (range [1,31]))(tm_mday)
rowthree(Oe)(one-based day of the month using an alternative numeric
            system)(tm_mday)
rowline()
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Day of the week specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(a)(abbreviated weekday name, e.g. Fri)(tm_wday)
rowthree(A)(full weekday name, e.g. Friday)(tm_wday)
rowthree(w)(weekday as a decimal number, where Sunday is 0 (range
            [0-6]))(tm_wday)
rowthree(Ow)(weekday, where Sunday is 0, using an alternative numeric
            system)(tm_wday)
rowthree(u)(weekday as a decimal number, where Monday is 1 (ISO 8601 format)
            (range [1-7]))(tm_wday)
rowthree(Ou)(weekday, where Monday is 1, using an alternative numeric
            system)(tm_wday)
rowline()    
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Hour, minute, second specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(H)(hour as a decimal number, 24 hour clock (range [00-23]))(tm_hour)
rowthree(OH)(hour from 24-hour clock using an alternative numeric
            system)(tm_hour)
rowthree(I)(hour as a decimal number, 12 hour clock (range [01,12]))(tm_hour)
rowthree(OI)(hour from 12-hour clock using the alternative numeric
            system)(tm_hour)
rowthree(M)(minute as a decimal number (range [00,59]))(tm_min)
rowthree(OM)(minute using an alternative numeric system)(tm_min)
rowthree(S)(second as a decimal number (range [00,60]))(tm_sec)
rowthree(OS)(second using an alternative numeric system)(tm_sec)
rowline()
)

    table(5)(NOTRANS(ccp{7.5cm}cp{2cm}))(
rowline()
row(xcell(Additional specifiers))
row(rcell(Specifier)cell()cell(Meaning)cell()lcell(std::tm field(s)))
rowline()    
rowthree(c)(standard date and time string, e.g. Sun Oct 17 04:41:13 2010)(all
        fields)
rowthree(Ec)(alternative date and time string)(all fields)
rowthree(x)(localized date representation)(all fields)
rowthree(Ex)(alternative date representation)(all fields)
rowthree(X)(localized time representation)(all fields)
rowthree(EX)(alternative time representation)(all fields)
rowthree(D)(equivalent to tt("%m/%d/%y"))(tm_mon, tm_mday, tm_year)
rowthree(F)(equivalent to tt("%Y-%m-%d") (the ISO 8601 date format))(tm_mon,
            tm_mday, tm_year)
rowthree(r)(localized 12-hour clock time)(tm_hour, tm_min, tm_sec)
rowthree(R)(equivalent to tt("%H:%M"))(tm_hour, tm_min)
rowthree(T)(equivalent to tt("%H:%M:%S") (the ISO 8601 time format))(tm_hour,
            tm_min, tm_sec)
rowthree(p)(localized a.m. or p.m.)(tm_hour)
rowthree(z)(offset from UTC in the ISO 8601 format (e.g. -0430; no characters
            if time zone information is not available))(tm_isdst)
rowthree(Z)(time zone name or abbreviation (no characters if time zone
            information is not available))(tm_isdst) 
rowline()
))
