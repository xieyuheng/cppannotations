Derived classes can be constructed without
        hi(inheritance: no derived class constructors)
    explicitly defining derived class constructors. In those cases the
available base class constructors are called.

This feature is either used or not. It is not possible to omit some of the
derived class constructors, using the corresponding base class constructors
instead. To use this feature for classes that are derived from multiple base
classes (cf. section ref(MULTIPLE)) all the base class constructors must
have different signatures. Considering the complexities that are involved here
it's probably best to avoid using base class constructors for classes using
multiple inheritance.

    The construction of derived class objects can be delegated to
 hi(construction: delegate to base classes) base class constructor(s) using
the following syntax:
        verb(
    class BaseClass
    {
        public:
            // BaseClass constructor(s)
    };

    class DerivedClass: public BaseClass
    {
        public:
            using BaseClass::BaseClass; // No DerivedClass constructors
                                        // are defined
    };
        )
